import { useEffect, useState } from "react";
import { api } from "../api";
import "../lessons-styles.css";

export default function Lessons() {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    setTimeout(() => {
      setLoading(false);
    }, 1000);
  }, []);

  const lessons = [
    {
      id: 1,
      title: "–û—Å–Ω–æ–≤—ã –≥–∏—Ç–∞—Ä—ã",
      description: "–ò–∑—É—á–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –∞–∫–∫–æ—Ä–¥—ã –∏ —Ç–µ—Ö–Ω–∏–∫—É –∏–≥—Ä—ã –Ω–∞ –≥–∏—Ç–∞—Ä–µ",
      duration: "15 –º–∏–Ω",
      difficulty: "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
      instrument: "üé∏",
      completed: false,
      category: "–ì–∏—Ç–∞—Ä–∞"
    },
    {
      id: 2,
      title: "–†–∏—Ç–º –∏ —Ç–µ–º–ø",
      description: "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —á—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞ –∏ –Ω–∞—É—á–∏—Ç–µ—Å—å –∏–≥—Ä–∞—Ç—å –≤ —Ç–µ–º–ø",
      duration: "20 –º–∏–Ω",
      difficulty: "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
      instrument: "üéµ",
      completed: true,
      category: "–¢–µ–æ—Ä–∏—è"
    },
    {
      id: 3,
      title: "–û—Å–Ω–æ–≤—ã –ø–∏–∞–Ω–∏–Ω–æ",
      description: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–ª–∞–≤–∏—à–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤",
      duration: "18 –º–∏–Ω",
      difficulty: "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
      instrument: "üéπ",
      completed: false,
      category: "–ü–∏–∞–Ω–∏–Ω–æ"
    },
    {
      id: 4,
      title: "–ê–∫–∫–æ—Ä–¥—ã –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–µ—Å–µ–Ω",
      description: "–ò–∑—É—á–∏—Ç–µ –∞–∫–∫–æ—Ä–¥—ã –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Ö–∏—Ç–æ–≤",
      duration: "25 –º–∏–Ω",
      difficulty: "–°—Ä–µ–¥–Ω–∏–π",
      instrument: "üé∏",
      completed: false,
      category: "–ì–∏—Ç–∞—Ä–∞"
    },
    {
      id: 5,
      title: "–ò–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è",
      description: "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –∏ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—é",
      duration: "30 –º–∏–Ω",
      difficulty: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
      instrument: "üéº",
      completed: false,
      category: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"
    }
  ];

  const categories = ["–í—Å–µ", "–ì–∏—Ç–∞—Ä–∞", "–ü–∏–∞–Ω–∏–Ω–æ", "–¢–µ–æ—Ä–∏—è", "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"];
  const [selectedCategory, setSelectedCategory] = useState("–í—Å–µ");

  const filteredLessons = selectedCategory === "–í—Å–µ" 
    ? lessons 
    : lessons.filter(lesson => lesson.category === selectedCategory);

  const getDifficultyColor = (difficulty) => {
    switch(difficulty) {
      case "–ù–∞—á–∏–Ω–∞—é—â–∏–π": return "var(--green-600)";
      case "–°—Ä–µ–¥–Ω–∏–π": return "var(--yellow-600)";
      case "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π": return "var(--red-600)";
      default: return "var(--neutral-600)";
    }
  };

  if (loading) {
    return (
      <div className="lessons-page">
        <div className="lessons-container">
          <div className="loading-spinner">
            <div className="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ —É—Ä–æ–∫–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="lessons-page">
      <div className="lessons-container">
        {/* Header */}
        <div className="lessons-header">
          <h1>üéµ –£—Ä–æ–∫–∏ –º—É–∑—ã–∫–∏</h1>
          <p>–ò–∑—É—á–∞–π—Ç–µ –º—É–∑—ã–∫—É –≤ —É–¥–æ–±–Ω–æ–º —Ç–µ–º–ø–µ —Å –Ω–∞—à–∏–º–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —É—Ä–æ–∫–∞–º–∏</p>
        </div>

        {/* Progress Stats */}
        <div className="progress-stats">
          <div className="stat-card">
            <div className="stat-icon">‚úÖ</div>
            <div className="stat-info">
              <span className="stat-number">{lessons.filter(l => l.completed).length}</span>
              <span className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">üìö</div>
            <div className="stat-info">
              <span className="stat-number">{lessons.length}</span>
              <span className="stat-label">–í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤</span>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">‚è±Ô∏è</div>
            <div className="stat-info">
              <span className="stat-number">
                {lessons.reduce((total, lesson) => total + parseInt(lesson.duration), 0)}
              </span>
              <span className="stat-label">–ú–∏–Ω—É—Ç –æ–±—É—á–µ–Ω–∏—è</span>
            </div>
          </div>
        </div>

        {/* Category Filter */}
        <div className="category-filter">
          {categories.map(category => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}
              className={`filter-btn ${selectedCategory === category ? 'active' : ''}`}
            >
              {category}
            </button>
          ))}
        </div>

        {/* Lessons Grid */}
        <div className="lessons-grid">
          {filteredLessons.map(lesson => (
            <div key={lesson.id} className={`lesson-card ${lesson.completed ? 'completed' : ''}`}>
              <div className="lesson-header">
                <div className="lesson-instrument">{lesson.instrument}</div>
                {lesson.completed && <div className="completed-badge">‚úì</div>}
              </div>
              
              <div className="lesson-content">
                <h3 className="lesson-title">{lesson.title}</h3>
                <p className="lesson-description">{lesson.description}</p>
                
                <div className="lesson-meta">
                  <span className="lesson-duration">‚è±Ô∏è {lesson.duration}</span>
                  <span 
                    className="lesson-difficulty"
                    style={{ color: getDifficultyColor(lesson.difficulty) }}
                  >
                    üéØ {lesson.difficulty}
                  </span>
                </div>
              </div>

              <div className="lesson-footer">
                <button className={`btn ${lesson.completed ? 'btn-secondary' : 'btn-primary'}`}>
                  {lesson.completed ? '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å' : '–ù–∞—á–∞—Ç—å —É—Ä–æ–∫'}
                </button>
              </div>
            </div>
          ))}
        </div>

        {filteredLessons.length === 0 && (
          <div className="no-lessons">
            <p>üîç –£—Ä–æ–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{selectedCategory}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          </div>
        )}
      </div>
    </div>
  );
}
